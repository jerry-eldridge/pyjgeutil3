1_use_QuotientGraph.py

Graph G = {'V': range(0, 7), 'E': [[0, 1], [1, 2], [0, 2], [2, 3], 
[3, 4], [4, 5], [5, 6], [4, 6]]}
Equivalence Relation R = [[0], [1], [5], [6], [2, 3, 4]]
G2 = graph.QuotientGraph(G,R) = 
{'V': range(0, 5), 'E': [[0, 1], [1, 0], [0, 4], [4, 0], [1, 4], [4, 1], 
[4, 2], [2, 4], [4, 3], [3, 4], [2, 3], [3, 2]]}

2_use_QuotientGraph.py

Graph G = {'V': range(0, 7), 'E': [[0, 1], [1, 2], [0, 2], [2, 3], 
[3, 4], [4, 5], [5, 6], [4, 6]]}
Equivalence Relation R = [[2, 3, 4]]
G2 = graph.QuotientGraph(G,R) = 
{'V': range(0, 5), 'E': [[1, 2], [2, 1], [1, 0], [0, 1], [2, 0], [0, 2], 
[0, 3], [3, 0], [0, 4], [4, 0], [3, 4], [4, 3]]}

3_use_QuotientGraph.py

Graph G = {'V': range(0, 8), 'E': [[0, 1], [1, 2], [0, 2], [2, 3], 
[3, 4], [4, 5], [5, 6], [4, 6], [6, 7]]}
Equivalence Relation R = [[2, 3, 4], [6, 7]]
G2 = graph.QuotientGraph(G,R) = 
{'V': range(0, 5), 'E': [[2, 3], [3, 2], [2, 0], [0, 2], [3, 0], [0, 3], 
[0, 4], [4, 0], [0, 1], [1, 0], [4, 1], [1, 4]]}

